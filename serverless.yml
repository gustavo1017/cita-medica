service: cita-medica
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    APPOINTMENT_TABLE: ${self:service}-appointments-${sls:stage}

functions:
  getAppointmentsByInsuredId:
    handler: src/infrastructure/lambdas/getAppointmentsByInsuredId.handler
    events:
      - http:
          path: appointments
          method: get
          request:
            parameters:
              querystrings:
                insuredId: true
          documentation:
            summary: "Obtener citas por insuredId"
            description: "Retorna todas las citas registradas en RDS filtradas por insuredId"
            requestModels:
              "application/json": GetAppointmentsRequest
            methodResponses:
              - statusCode: "200"
                responseModels:
                  "application/json": GetAppointmentsResponse

  appointment:
    handler: src/infrastructure/lambdas/appointment.handler
    events:
      - http:
          path: appointment
          method: post
          documentation:
            summary: "Crear cita médica"
            description: "Registra una cita en DynamoDB y la envía a la cola SQS correspondiente"
            requestModels:
              "application/json": AppointmentRequest
            methodResponses:
              - statusCode: "201"
                responseModels:
                  "application/json": AppointmentResponse
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsPeQueue
              - Arn
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsClQueue
              - Arn

  appointmentPe:
    handler: src/infrastructure/lambdas/appointmentpe.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsPeQueue
              - Arn

  appointmentCl:
    handler: src/infrastructure/lambdas/appointmentcl.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SqsClQueue
              - Arn

custom:
  documentation:
    api:
      info:
        version: "1.0.0"
        title: "Cita Médica API"
        description: "API para gestionar citas médicas en Perú y Chile"
    models:
      - name: GetAppointmentsRequest
        contentType: "application/json"
        schema:
          type: object
          properties:
            insuredId:
              type: string
              example: "00001"
      - name: GetAppointmentsResponse
        contentType: "application/json"
        schema:
          type: object
          properties:
            appointments:
              type: array
              items:
                type: object
                properties:
                  id: { type: string }
                  scheduleId: { type: integer }
                  countryISO: { type: string }
      - name: AppointmentRequest
        contentType: "application/json"
        schema:
          type: object
          properties:
            insuredId: { type: string }
            scheduleId: { type: integer }
            countryISO: { type: string }
      - name: AppointmentResponse
        contentType: "application/json"
        schema:
          type: object
          properties:
            id: { type: string }
            status: { type: string }

plugins:
  - serverless-openapi-documentation
